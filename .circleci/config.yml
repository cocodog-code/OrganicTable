version: 2.1

executors:
  default:
    working_directory: ~/organictable
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: postgres
      - image: circleci/postgres:11.9
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: organictable_test
          POSTGRES_PASSWORD: password

commands:
  setup:
    steps:
      - checkout
      - run:
          name: setup bundler
          command: |
            gem update --system
            gem uninstall bundler
            rm /usr/local/bin/bundle
            rm /usr/local/bin/bundler
            gem install bundler -v 1.17.2
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run:
          name: install dependencies
          command: yarn install
      - save_cache:
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
          paths:
            - ./vendor/bundle
            - ./node_modules

jobs:
  test:
    executor: default
    steps:
      - checkout
      - run:
          name: DBの起動を待つ
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 120s
      # Database setup
      - run: mv ./config/database.yml.ci ./config/database.yml
      - run: bundle exec rake db:migrate
      - run: bundle exec rake db:schema:load
      - run: bundle exec bin/webpack

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      # run rubocop!
      - run:
          name: Rubocop
          command: bundle exec rubocop

  deploy:
    executor: default
    steps:
      - setup
      - add_ssh_keys:
          fingerprints:
            - "83:60:89:f9:44:af:d2:1f:f5:58:15:8a:43:b4:bb:74"
      - deploy:
         name: deploy by capistrano
         command:
           bundle exec cap production deploy

workflows:
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
